I. Basic Configuration
  1. create root folder as jsamazona
  2. add frontend and backend
  3. create src folder in frontend
  4. create index.html with heading jsamazona in src
  5. run npm init in frontend folder
  6. npm i live-server --save-dev
  7. add start command as live-server src --verbose
  8. run npm start


II. Design Website
  1. create style.css
  2. link style.css to index.html
  3. create grid-container 
  4. create header, main, footer
  5. style: html, body
  6. style grid-container, header, main, footer

III. Create static home screen
  1. create ul.products
  2. create li
  3. create div.product
  4. add: .product-image, .product-name, .product-brand, .product-price
  5. style ul.products and internal divs
  6. duplicate 2 times to show products

IV. Convert static homescreen to dynamic homescreen
  1. create data.js
  2. export an array of 6 products
  3. create screen/Homescreen.js
  4. exprot Homescreen as an object with render() method
  5. implement render()
  6. import data.js
  7. return products mapped to lis inside a ul
  8. create app.js
  9. link it to index.html as module 
  10. set main id to main_container
  11. create router() function 
  12. set main_container innerHTML to Homescreen.render
  13. set load event of window to router() function

V. Build Url Router
  1. create routes as route:screen object for home screen
  2. create util.js
  3. export parseRequestURL()
  4. set urls as hash address split by slash
  5. return resource, id and verb of url
  6. update router()
  7. set request as parseRequestURL()
  8. build parsedUrl() and compare with routes
  9. if route exists render it, else render 404 error
  10. create screens/Error404.js and error message 


VI. Create Node.JS Server
  1. run npm init in root jsamazona folder
  2. run install express
  3. create server.js
  4. add start command as node backend/server.js
  5. require express
  6. move data.js from frontend to backend
  7. create route for api/products
  8. return products in data.js
  9. run npm start

VII. Load products From Backend
  1. edit HomeScreen.js
  2. make render async
  3. fetch product from '/api/products' in reder()
  4. make rotuer() asyc and call await HomeScreen.render()